#  change name to serverless.yml to deploy

service: demo-serverless

provider:
  name: google
  stage: dev
  runtime: nodejs10
  region: us-central1
  project: my-project
  # The GCF credentials can be a little tricky to set up. Luckily we've documented this for you here:
  # https://serverless.com/framework/docs/providers/google/guide/credentials/
  #
  # the path to the credentials file needs to be absolute
  # If provider.credentials is provided in the serverless.yml, the Application Default Credentials will be ignored.
  credentials: ~/.gcloud/keyfile.json

frameworkVersion: '3'

plugins:
  - serverless-google-cloudfunctions

# needs more granular excluding in production as only the serverless provider npm
# package should be excluded (and not the whole node_modules directory)
package:
  exclude:
    - node_modules/**
    - .gitignore
    - .git/**

functions:
  - ${file(src/route.yml)}
  # - ${file(src/other.yml)}
# you can define resources, templates etc. the same way you would in a
# Google Cloud deployment configuration
#resources:
#  resources:
#    - type: storage.v1.bucket
#      name: my-serverless-service-bucket
#  imports:
#    - path: my_template.jinja
